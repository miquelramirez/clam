# SConstruct file for CLAMcore
from buildtools.pkggen import PackageData
from buildtools.file_retriever import FileRetriever
import os, sys

print """\
##############################################
### BOOTSTRAPPING CLAM CORE LIBRARY        ###
##############################################"""

Import('core_env version top install_dirs')

print "Creating pkg-config descriptor...",
pkg_data = PackageData( 'clam_core', version, [] )
pkg_data.create_pkg_descriptor( core_env, 'clam_core.pc' )
print "ok"


print "Gathering necessary source files...",
if not os.path.exists('src') :
	os.mkdir('src')
if not os.path.exists('include' ) :
	os.makedirs('include/CLAM')

core_folders = ['src/Base', 'src/Data/Base', 'src/Data/BasicProcessing/Audio.*', 'src/Data/Descriptors/Pool', 'src/Defines', 'src/Errors', 'src/Flow/Ports', 'src/Flow/Networks', 'src/Flow/Controls', 'src/Processing/Base', 'src/Processing/Plugins','src/Standard', 'src/Storage', 'src/Storage/Base', 'src/Storage/XML','src/System','src/System/Threads', 'externals/CbLib', 'src/Processing/Controls']

if sys.platform == 'windows' :
	core_folders.append('src/Defines/Windows')
else :
	core_folders.append('src/Defines/Unix')	

blacklist = ['ScaleCnv']

if core_env['xmlbackend'] == 'xercesc' :
	blacklist.append( 'LibXml.+')
	blacklist.append( 'Null.+' )
elif core_env['xmlbackend'] == 'xmlpp' :
	blacklist.append( 'Xerces.+')
	blacklist.append( 'Null.+' ) 
else :
	blacklist.append( 'Xerces.+' )
	blacklist.append( 'LibXml.+' )

if not core_env['with_ladspa_support'] :
	blacklist.append( 'Ladspa.+' )

if not core_env['with_osc_support'] :
	blacklist.append( 'OSC.+')

file_retriever = FileRetriever( top+'/..', core_folders, blacklist )

file_retriever.scan()

print "ok"
core_env.Append(CPPPATH='include/CLAM')
core_env.Append(CCFLAGS='-include %s'%core_env['preinclude'])

core_env.SharedLibrary( 'clam_core', file_retriever.sources )

