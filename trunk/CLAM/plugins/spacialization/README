
This is a CLAM plugin which contains some processings to do 3D acoustics simulation.
That means simulating moving sound emitters and receptor within a virtual 3D scenario.
It works by having a database of impulse responses (pressure and velocities) for
each receiver and emitter position within a discrete position grid.

Of course you can reuse the building blocks for simpler or more complex systems:
- Simpler spectral processing (FFT, IFFT, arithmetic operation and conversions)
- Processing of impulse response representation in DFT (computation, interpolation, DB's)
- Low latency real-time convolution
- Processings to map receiver acoustic magnitudes to a surround system.

Some examples (.clamnetwork files) needs external databases. You should have them in your disk and link (ln -s) the following directories:
- HRTFs
- wavs


complex_fourier_transforms.clamnetwork
	This network measures the error of a successive FFT-IFFT tranformation
	by substracting the output to the input.
	A perfect transformation should give absolute silence.
	The windowing affects by a factor the output of the transformations.
	You can change it on the mixer processing.

spectrum_representation_benchmark.clamnetwork
	This benchmark is used to compare with profilers such as callgrind
	the performance of spectrum multiplication in different spectrum
	representations (complex and polar) considering also the needed
	conversions.

constant_spectrum.clamnetwork
	A test for the ConstantSpectrum processing that keeps at the output
	the spectrum of the first frame of an audio file.
	The example resynthesizes and visualizes such spectrum each frame.

lowlatencyconvolution.clamnetwork
	An example effect of LowLatencyConvolution which is able to apply
	a reverb using a recorded impulse response with a very long tail
	faster than time domain convolution (logarithmic time to the frame)
	and with lower latency than spectrum domain convolution (indeed
	the latency is just the input block size).



	




