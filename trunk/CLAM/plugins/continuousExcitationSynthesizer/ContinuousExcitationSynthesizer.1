.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH CONTINUOUSEXCITATIONSYNTHESIZER "1" "March 2009" "ContinuousExcitationSynthesizer version 1.3.1~svn12688" "User Commands"
.SH NAME
ContinuousExcitationSynthesizer \- OSC controlled synthesizer based on Spectral Modelling techniques
.SH SYNOPSIS
.B ContinuousExcitationSynthesizer
\fIinputSDIFDirectory \fR[\fI(osc | inputScore) \fR[ \fIoutput.wav \fR[ \fIsynthesis.xml \fR] ] ]
.SH DESCRIPTION
This example shows off an implementation of a synthesizer
that uses a database of SDIF files to perform real\-time
Spectral Modeling Synthesis.
.PP
If 'osc' option is given, the application will expect an osc stream
with this message format: /ebowSynthesizer pitch amplitude
to be sent to port 7000. Pitch should be in Hertz and amplitude
should be from 0\-1.
.PP
If an input score is provided, the application will expect the
score to have the same format as the files in testData, i.e.
pitch amplitude
pitch amplitude ...
.PP
One synthesis frame will be calculated for each OSC message.
or each line from a score file. So, given a hopsize of 256,
you'll need to generate about 172 control events per second.
.PP
You can obtain a sample database at:
http://clam\-project.org/clam_data/trunk/OboeSDIF/
Alternatively, databases can be generated by using WavToSDIF and
SDIFToWavStreaming programs available as CLAM framework
examples. The first one will convert a regular wave into
an SDIF file and the second will prepare a set of SDIF files
to build an SMS synthesizer database.
.SH AUTHOR
Written by Greg Kellum
.SH COPYRIGHT
Copyright \(co 2009, Universitat Pompeu Fabra.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Licence GPLv2+: GNU GPL version 2 or later <http://gnu.org/licenses/gpl2.html>
