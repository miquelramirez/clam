2008-??-?? CLAM 1.?.?

 * DataArray __setitem__ class method definition wrapping a new method EditElem in order to have [] working for python vectors also in assignation, instead of have to use the workaround with set(). pyclam.patch updated.
 * Audio and DataArray classes manually exposed. Removed now unused extra wrappers for those classes at Definitions.hxx.
 * distcc support added to scons script
 * Moving remaining source to src directory. indexing suite directory, Definitions.*xx, etc.
 * MonoAudioFileReaderConfig now exposed to python by hand.
 * Removed unused old extra-wrappers for some Processing's and ProcessingConfig's.
 * Bug fixed in py++ to get 'by hand' class registration above of all.
 * License include (in bindings files generated by py++).
 * Split of the python library in many files in order to get a lower compile time. Before was only a single file, useful to have the generated bindings updated in the server, but when the library gets stable, automatic generated files could be also uploaded to achieve the same.
 * New manually exposed classes (like FFTConfig) in order to avoid some problems with py++ and DynamicTypes.
 * Py++ script tweak to allow automatic inclusion and register of manually 'parsed' and exposed classes.
 * Code clean. Removed (now)unused extra-wrappers (Network, NetworkPlayer, etc).
 * Debug option added to scons build script.
 * Examples update:
 ** New example: loading_and_playing_a_network.py
 ** Among other things now using 'from clam import *' instead of 'import clam' in order to avoid the "namespace prefix": 'clam.'
 * PyUnit based unit tests added.
 * Plugins bindings enabled/disabled and own path prefix added as SCons option.
 * Extending bindings to processing plugins (optional feature).
 * README file renamed to INSTALL and instructions updated.
 * SCons options.cache file support added in order to deal with the CLAM installation prefix.
 * Switching from Makefile to SCons as build system.
 * Initial import. CLAM library python bindings.
