import os, sys
import glob

options_filename = 'options.cache'
opts = Options(options_filename,ARGUMENTS)
opts.Add(PathOption('prefix', 'The prefix where the CLAM library is installed', '/usr/local'))
opts.Add(PackageOption('plugins_prefix', 'The prefix where the CLAM plugins are installed. Use No for disable them and Yes to use the same CLAM installation path.', 'no'))
opts.Add(BoolOption('debug', 'Enables debug symbols', 'no'))
env = Environment(ENV=os.environ, options=opts)
Help(opts.GenerateHelpText(env))

avoid_configure_option=ARGUMENTS.get('force_avoid_configure',0)
needs_configure = ('configure' in COMMAND_LINE_TARGETS) or not os.path.exists(options_filename) or len(ARGUMENTS)>0
avoid_configure = '--help' in COMMAND_LINE_TARGETS or avoid_configure_option=='1' or avoid_configure_option=='yes' or '-c' in ARGUMENTS

if needs_configure and not avoid_configure :
	print 'Configure phase...'
	opts.Update(env)
	opts.Save(options_filename, env)
	print "Finished. Invoke 'scons' now."
	Exit(0)


env.Append( CPPPATH=[env['prefix']+'/include'] )
env.Append( LIBS=['clam_core','clam_audioio','clam_processing'] )
env.Append( LIBPATH=[env['prefix']+'/lib'] )

env.Append( CPPDEFINES=['CLAM_FLOAT','_DEBUG','USE_PTHREADS=1','USE_XERCES=1','CLAM_USE_XML','USE_LADSPA=1','USE_FFTW3=1','USE_SNDFILE=1','USE_OGGVORBIS=1','WITH_VORBIS=1','USE_MAD=1','WITH_MAD=1','USE_ID3=1','USE_ALSA=1','USE_JACK=1','USE_PORTAUDIO=1'] )
env.Append( CPPPATH=['/usr/include/alsa','/usr/local/include'] )


env.Append( CPPPATH=['/usr/include/python2.5','/usr/include/'] )
env.Append( LIBS=['boost_python'] )
env.Append( LIBPATH=['/usr/lib/python2.5/config'] )

if env['debug']:
	env.Append( CCFLAGS=['-g','-O3','-Wall'] )

env.Append( CPPPATH=['.', './src/automatic','./src/manual'] )
bindings = glob.glob('src/automatic/*.cpp')
bindings += glob.glob('src/manual/*.cpp')
source_files = ['src/Definitions.cxx','src/indexing/indexing_slice.cpp','src/indexing/python_iterator.cpp'] + bindings

env.SharedLibrary( target='clam', source=source_files, SHLIBPREFIX='' )
