// generated by Fast Light User Interface Designer (fluid) version 1.0104

#ifndef SoundSourceSelection_h
#define SoundSourceSelection_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_File_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Output.H>

class SMS_SoundSourceSelection {
public:
  Fl_Window* BuildContents();
  Fl_Window *mpWindow;
  Fl_File_Input *mFilenameCollector;
  Fl_Button *mBrowseFileSystem;
  Fl_Group *mSignalThumbnail;
  Fl_Group *mSignalParametersContainer;
  Fl_Output *mSampleRate;
  Fl_Output *mSampleResolution;
  Fl_Output *mDuration;
  Fl_Button *mPlaySound;
  Fl_Button *mStopSound;
};
#include <FL/Fl_Input.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Choice.H>

class SMS_BasicAnalysisSettings {
public:
  Fl_Window* BuildContents();
  Fl_Window *mWindow;
  Fl_Input *mAnalysisFrameLength;
  Fl_Box *mFrameLengthUnit;
  Fl_Value_Slider *mOverlapFactor;
  Fl_Box *mOverlapUnit;
  Fl_Counter *mZeroPaddingFactor;
  Fl_Choice *mWindowFunction;
  Fl_Group *mTDFunctionContainer;
  Fl_Group *mFDFunctionContainer;
  Fl_Button *mBrowseWithWindow;
  Fl_Output *mEffectiveSinSize;
  Fl_Box *mEffectiveSinSizeDecorator;
  Fl_Output *mEffectiveResSize;
  Fl_Box *mEffectiveResSizeDecorator;
};

class SMS_SPpPAnalysisSettings {
public:
  Fl_Window* BuildContents();
  Fl_Window *mWindow;
  Fl_Input *mPeakMagnitudeThreshold;
  Fl_Box *mPeakMagThresDecorator;
  Fl_Input *mPeakFreqCutoff;
  Fl_Box *mPeakFreqCutoffDecorator;
  Fl_Group *mFreqRangeGroup;
  Fl_Box *mLowerBoundFreqDecorator;
  Fl_Box *mUpperBoundDecorator;
  Fl_Counter *mLowerBoundFreq;
  Fl_Counter *mUpperBoundFreq;
};
#include <FL/Fl_Check_Button.H>

class SMS_PeakContinuationSettings {
public:
  Fl_Window* BuildContents();
  Fl_Window *mWindow;
  Fl_Counter *mMaxFreqDevFactor;
  Fl_Box *mMaxFreqDecorator;
  Fl_Check_Button *mAssumeHarmonicity;
  Fl_Box *mAssHarmDecorator;
  Fl_Check_Button *mActivateTrackCleaning;
  Fl_Box *mActTrackCleanDecorator;
  Fl_Group *mTrackPruningGroup;
  Fl_Output *mExpectedFrames;
  Fl_Output *mFrameLen;
  Fl_Box *mFrameLenDecorator;
  Fl_Input *mToleranceToDiscont;
  Fl_Box *mTTDDecorator;
  Fl_Input *mMinTrackLen;
  Fl_Box *mMinTrackLenDecorator;
};
#endif
