// generated by Fast Light User Interface Designer (fluid) version 1.0011

#include "UserInterface.hxx"
#include "SMSAnalysisSynthesisConfig.hxx"

inline void UserInterface::cb_Load_i(Fl_Menu_*, void*) {
  LoadConfiguration();
}
void UserInterface::cb_Load(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Load_i(o,v);
}

inline void UserInterface::cb_Edit_i(Fl_Menu_*, void*) {
  EditConfiguration();
}
void UserInterface::cb_Edit(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Edit_i(o,v);
}

inline void UserInterface::cb_Store_i(Fl_Menu_*, void*) {
  StoreConfiguration();
}
void UserInterface::cb_Store(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Store_i(o,v);
}

inline void UserInterface::cb_mDisplayInSound_i(Fl_Menu_*, void*) {
  DisplayInputSound();
}
void UserInterface::cb_mDisplayInSound(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mDisplayInSound_i(o,v);
}

inline void UserInterface::cb_mDisplayInSpec_i(Fl_Menu_*, void*) {
  DisplayInputSpectrum();
}
void UserInterface::cb_mDisplayInSpec(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mDisplayInSpec_i(o,v);
}

inline void UserInterface::cb_mPlayInputSound_i(Fl_Menu_*, void*) {
  PlayInputSound();
}
void UserInterface::cb_mPlayInputSound(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mPlayInputSound_i(o,v);
}

inline void UserInterface::cb_mAnalyze_i(Fl_Menu_*, void*) {
  Analyze();
}
void UserInterface::cb_mAnalyze(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mAnalyze_i(o,v);
}

inline void UserInterface::cb_Load1_i(Fl_Menu_*, void*) {
  LoadAnalysisData();
}
void UserInterface::cb_Load1(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Load1_i(o,v);
}

inline void UserInterface::cb_mStoreAnalysisData_i(Fl_Menu_*, void*) {
  StoreAnalysisData();
}
void UserInterface::cb_mStoreAnalysisData(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mStoreAnalysisData_i(o,v);
}

inline void UserInterface::cb_Load2_i(Fl_Menu_*, void*) {
  LoadTransformation();
}
void UserInterface::cb_Load2(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Load2_i(o,v);
}

inline void UserInterface::cb_mDoTransformation_i(Fl_Menu_*, void*) {
  Transform();
}
void UserInterface::cb_mDoTransformation(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mDoTransformation_i(o,v);
}

inline void UserInterface::cb_Synthesize_i(Fl_Menu_*, void*) {
  Synthesize();
}
void UserInterface::cb_Synthesize(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Synthesize_i(o,v);
}

inline void UserInterface::cb_Sound_i(Fl_Menu_*, void*) {
  DisplayOutputSound();
}
void UserInterface::cb_Sound(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sound_i(o,v);
}

inline void UserInterface::cb_Sinusoidal_i(Fl_Menu_*, void*) {
  DisplayOutputSoundSinusoidal();
}
void UserInterface::cb_Sinusoidal(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sinusoidal_i(o,v);
}

inline void UserInterface::cb_Residual_i(Fl_Menu_*, void*) {
  DisplayOutputSoundResidual();
}
void UserInterface::cb_Residual(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Residual_i(o,v);
}

inline void UserInterface::cb_Sound1_i(Fl_Menu_*, void*) {
  PlayOutputSound();
}
void UserInterface::cb_Sound1(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sound1_i(o,v);
}

inline void UserInterface::cb_Sinusoidal1_i(Fl_Menu_*, void*) {
  PlaySinusoidal();
}
void UserInterface::cb_Sinusoidal1(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sinusoidal1_i(o,v);
}

inline void UserInterface::cb_Residual1_i(Fl_Menu_*, void*) {
  PlayResidual();
}
void UserInterface::cb_Residual1(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Residual1_i(o,v);
}

inline void UserInterface::cb_mMelodyAnalyze_i(Fl_Menu_*, void*) {
  AnalyzeMelody();
}
void UserInterface::cb_mMelodyAnalyze(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mMelodyAnalyze_i(o,v);
}

inline void UserInterface::cb_mMelodyStore_i(Fl_Menu_*, void*) {
  StoreMelody();
}
void UserInterface::cb_mMelodyStore(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mMelodyStore_i(o,v);
}

inline void UserInterface::cb_Sound2_i(Fl_Menu_*, void*) {
  StoreOutputSound();
}
void UserInterface::cb_Sound2(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sound2_i(o,v);
}

inline void UserInterface::cb_Sinusoidal2_i(Fl_Menu_*, void*) {
  StoreOutputSoundSinusoidal();
}
void UserInterface::cb_Sinusoidal2(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sinusoidal2_i(o,v);
}

inline void UserInterface::cb_Residual2_i(Fl_Menu_*, void*) {
  StoreOutputSoundResidual();
}
void UserInterface::cb_Residual2(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Residual2_i(o,v);
}

inline void UserInterface::cb_Exit_i(Fl_Menu_*, void*) {
  if(mWindow2!=NULL) delete mWindow2;
Exit();
}
void UserInterface::cb_Exit(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Exit_i(o,v);
}

inline void UserInterface::cb_About_i(Fl_Menu_*, void*) {
  AboutWindow();
}
void UserInterface::cb_About(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_About_i(o,v);
}

Fl_Menu_Item UserInterface::menu_mMenuBar[] = {
 {"Input", 0,  0, 0, 64, 0, 0, 12, 0},
 {"Load Configuration...", 0,  (Fl_Callback*)UserInterface::cb_Load, 0, 0, 0, 0, 12, 0},
 {"Edit Configuration...", 0,  (Fl_Callback*)UserInterface::cb_Edit, 0, 0, 0, 0, 12, 0},
 {"Store Configure...", 0,  (Fl_Callback*)UserInterface::cb_Store, 0, 16, 0, 0, 12, 0},
 {"Display", 0,  0, 0, 65, 0, 0, 12, 0},
 {"Sound", 0,  (Fl_Callback*)UserInterface::cb_mDisplayInSound, 0, 1, 0, 0, 12, 0},
 {"Spectrum", 0,  (Fl_Callback*)UserInterface::cb_mDisplayInSpec, 0, 17, 0, 0, 12, 0},
 {0},
 {"Play", 0,  (Fl_Callback*)UserInterface::cb_mPlayInputSound, 0, 1, 0, 0, 12, 0},
 {0},
 {"Analysis", 0,  0, 0, 64, 0, 0, 12, 0},
 {"Analyze", 0x40061,  (Fl_Callback*)UserInterface::cb_mAnalyze, 0, 1, 0, 0, 12, 0},
 {"Load...", 0,  (Fl_Callback*)UserInterface::cb_Load1, 0, 0, 0, 0, 12, 0},
 {"Store...", 0,  (Fl_Callback*)UserInterface::cb_mStoreAnalysisData, 0, 1, 0, 0, 12, 0},
 {0},
 {"Transformation", 0,  0, 0, 64, 0, 0, 12, 0},
 {"Load...", 0,  (Fl_Callback*)UserInterface::cb_Load2, 0, 0, 0, 0, 12, 0},
 {"Apply", 0,  (Fl_Callback*)UserInterface::cb_mDoTransformation, 0, 1, 0, 0, 12, 0},
 {0},
 {"Synthesis", 0,  0, 0, 65, 0, 0, 12, 0},
 {"Synthesize", 0x40073,  (Fl_Callback*)UserInterface::cb_Synthesize, 0, 0, 0, 0, 12, 0},
 {0},
 {"Output", 0,  0, 0, 65, 0, 0, 12, 0},
 {"Display", 0,  0, 0, 64, 0, 0, 12, 0},
 {"Sound", 0,  (Fl_Callback*)UserInterface::cb_Sound, 0, 0, 0, 0, 12, 0},
 {"Sinusoidal", 0,  (Fl_Callback*)UserInterface::cb_Sinusoidal, 0, 0, 0, 0, 12, 0},
 {"Residual", 0,  (Fl_Callback*)UserInterface::cb_Residual, 0, 0, 0, 0, 12, 0},
 {0},
 {"Play", 0,  0, 0, 65, 0, 0, 12, 0},
 {"Sound", 0,  (Fl_Callback*)UserInterface::cb_Sound1, 0, 0, 0, 0, 12, 0},
 {"Sinusoidal", 0,  (Fl_Callback*)UserInterface::cb_Sinusoidal1, 0, 0, 0, 0, 12, 0},
 {"Residual", 0,  (Fl_Callback*)UserInterface::cb_Residual1, 0, 0, 0, 0, 12, 0},
 {0},
 {"Melody", 0,  0, 0, 65, 0, 0, 12, 0},
 {"Analyze", 0,  (Fl_Callback*)UserInterface::cb_mMelodyAnalyze, 0, 0, 0, 0, 12, 0},
 {"Store", 0,  (Fl_Callback*)UserInterface::cb_mMelodyStore, 0, 1, 0, 0, 12, 0},
 {0},
 {"Store", 0,  0, 0, 64, 0, 0, 12, 0},
 {"Sound", 0,  (Fl_Callback*)UserInterface::cb_Sound2, 0, 0, 0, 0, 12, 0},
 {"Sinusoidal", 0,  (Fl_Callback*)UserInterface::cb_Sinusoidal2, 0, 0, 0, 0, 12, 0},
 {"Residual", 0,  (Fl_Callback*)UserInterface::cb_Residual2, 0, 0, 0, 0, 12, 0},
 {0},
 {0},
 {"Exit", 0x40071,  (Fl_Callback*)UserInterface::cb_Exit, 0, 0, 0, 0, 12, 0},
 {"About", 0,  (Fl_Callback*)UserInterface::cb_About, 0, 0, 0, 0, 12, 0},
 {0}
};
Fl_Menu_Item* UserInterface::mDisplayInSM = UserInterface::menu_mMenuBar + 4;
Fl_Menu_Item* UserInterface::mDisplayInSound = UserInterface::menu_mMenuBar + 5;
Fl_Menu_Item* UserInterface::mDisplayInSpec = UserInterface::menu_mMenuBar + 6;
Fl_Menu_Item* UserInterface::mPlayInputSound = UserInterface::menu_mMenuBar + 8;
Fl_Menu_Item* UserInterface::mAnalyze = UserInterface::menu_mMenuBar + 11;
Fl_Menu_Item* UserInterface::mStoreAnalysisData = UserInterface::menu_mMenuBar + 13;
Fl_Menu_Item* UserInterface::mDoTransformation = UserInterface::menu_mMenuBar + 17;
Fl_Menu_Item* UserInterface::mSynthesize = UserInterface::menu_mMenuBar + 19;
Fl_Menu_Item* UserInterface::mOutputSM = UserInterface::menu_mMenuBar + 22;
Fl_Menu_Item* UserInterface::mVisualizeOutputs = UserInterface::menu_mMenuBar + 23;
Fl_Menu_Item* UserInterface::mPlayOutputs = UserInterface::menu_mMenuBar + 28;
Fl_Menu_Item* UserInterface::mMelodySM = UserInterface::menu_mMenuBar + 33;
Fl_Menu_Item* UserInterface::mMelodyAnalyze = UserInterface::menu_mMenuBar + 34;
Fl_Menu_Item* UserInterface::mMelodyStore = UserInterface::menu_mMenuBar + 35;
Fl_Menu_Item* UserInterface::mStoreOutputs = UserInterface::menu_mMenuBar + 37;

inline void UserInterface::cb_mWindow2_i(Fl_Window*, void*) {
  delete mWindow2;
mWindow2=NULL;
}
void UserInterface::cb_mWindow2(Fl_Window* o, void* v) {
  ((UserInterface*)(o->user_data()))->cb_mWindow2_i(o,v);
}

UserInterface::UserInterface() {
  Fl_Window* w;
  { Fl_Window* o = mWindow = new Fl_Window(872, 548, "SMS Analysis/Synthesis Application | MTG-UPF (Barcelona)");
    w = o;
    o->color(50);
    o->user_data((void*)(this));
    { Fl_Input* o = mConfigurationText = new Fl_Input(105, 25, 400, 20, "Configuration File");
      o->box(FL_THIN_DOWN_BOX);
      o->labelsize(12);
      o->textsize(12);
      o->align(132);
    }
    { Fl_Menu_Bar* o = mMenuBar = new Fl_Menu_Bar(0, 0, 872, 21);
      o->box(FL_THIN_UP_BOX);
      o->color(50);
      o->labelsize(13);
      o->textsize(12);
      o->menu(menu_mMenuBar);
    }
    { Fl_Smart_Tile* o = mSmartTile = new Fl_Smart_Tile(5, 50, 860, 490);
      o->color(23);
      Fl_Group::current()->resizable(o);
    }
    mWindow2=NULL;
    o->end();
  }
  for(int i=0; i<4; i++){
	mAttachedViews[i]=NULL;
	mAttachedPresentations[i]=NULL;
}
}

void UserInterface::AboutWindow() {
  Fl_Window* w;
  { Fl_Window* o = mWindow2 = new Fl_Window(417, 100, "About this program...");
    w = o;
    o->box(FL_ENGRAVED_BOX);
    o->color(17);
    o->labeltype(FL_NORMAL_LABEL);
    o->labelsize(10);
    o->callback((Fl_Callback*)cb_mWindow2, (void*)(this));
    { Fl_Box* o = new Fl_Box(85, 15, 265, 20, "SMS Analysis/Synthesis Application");
      o->labelfont(3);
      o->labelsize(12);
    }
    { Fl_Box* o = new Fl_Box(85, 40, 265, 20, "by MTG - IUA - UPF (Barcelona, Spain)");
      o->labelfont(2);
      o->labelsize(12);
    }
    new Fl_Box(360, 15, 50, 60, "logos/iua.xpm");
    { Fl_Box* o = new Fl_Box(90, 65, 260, 20, "please visit us at http://www.iua.upf.es/mtg for more info");
      o->labelfont(2);
      o->labelsize(11);
    }
    new Fl_Box(10, 20, 75, 55, "logos/mtg.xpm");
    mWindow2->show();
    o->clear_border();
    o->end();
  }
}
