// generated by Fast Light User Interface Designer (fluid) version 1.0011

#include "UserInterface.hxx"

inline void UserInterface::cb_mLoadConfigurationButton_i(Fl_Button*, void*) {
  LoadConfiguration();
}
void UserInterface::cb_mLoadConfigurationButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mLoadConfigurationButton_i(o,v);
}

inline void UserInterface::cb_mDisplayInputSoundButton_i(Fl_Button*, void*) {
  DisplayInputSound();
}
void UserInterface::cb_mDisplayInputSoundButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mDisplayInputSoundButton_i(o,v);
}

inline void UserInterface::cb_mAnalyzeButton_i(Fl_Button*, void*) {
  Analyze();
}
void UserInterface::cb_mAnalyzeButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mAnalyzeButton_i(o,v);
}

inline void UserInterface::cb_mLoadAnalysisDataButton_i(Fl_Button*, void*) {
  LoadAnalysisData();
}
void UserInterface::cb_mLoadAnalysisDataButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mLoadAnalysisDataButton_i(o,v);
}

inline void UserInterface::cb_mStoreAnalysisDataButton_i(Fl_Button*, void*) {
  StoreAnalysisData();
}
void UserInterface::cb_mStoreAnalysisDataButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mStoreAnalysisDataButton_i(o,v);
}

inline void UserInterface::cb_mLoadTransformationButton_i(Fl_Button*, void*) {
  LoadTransformation();
}
void UserInterface::cb_mLoadTransformationButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mLoadTransformationButton_i(o,v);
}

inline void UserInterface::cb_mTransformButton_i(Fl_Button*, void*) {
  Transform();
}
void UserInterface::cb_mTransformButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mTransformButton_i(o,v);
}

inline void UserInterface::cb_mAnalyzeMelodyButton_i(Fl_Button*, void*) {
  AnalyzeMelody();
}
void UserInterface::cb_mAnalyzeMelodyButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mAnalyzeMelodyButton_i(o,v);
}

inline void UserInterface::cb_mStoreMelodyButton_i(Fl_Button*, void*) {
  StoreMelody();
}
void UserInterface::cb_mStoreMelodyButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mStoreMelodyButton_i(o,v);
}

inline void UserInterface::cb_mSynthesizeButton_i(Fl_Button*, void*) {
  Synthesize();
}
void UserInterface::cb_mSynthesizeButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mSynthesizeButton_i(o,v);
}

inline void UserInterface::cb_mStoreOutputSoundButton_i(Fl_Button*, void*) {
  StoreOutputSound();
}
void UserInterface::cb_mStoreOutputSoundButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mStoreOutputSoundButton_i(o,v);
}

inline void UserInterface::cb_mDisplayOutputSoundButton_i(Fl_Button*, void*) {
  DisplayOutputSound();
}
void UserInterface::cb_mDisplayOutputSoundButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mDisplayOutputSoundButton_i(o,v);
}

inline void UserInterface::cb_mStoreOutputSoundSinusoidalButton_i(Fl_Button*, void*) {
  StoreOutputSoundSinusoidal();
}
void UserInterface::cb_mStoreOutputSoundSinusoidalButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mStoreOutputSoundSinusoidalButton_i(o,v);
}

inline void UserInterface::cb_mDisplayOutputSoundSinusoidalButton_i(Fl_Button*, void*) {
  DisplayOutputSoundSinusoidal();
}
void UserInterface::cb_mDisplayOutputSoundSinusoidalButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mDisplayOutputSoundSinusoidalButton_i(o,v);
}

inline void UserInterface::cb_mStoreOutputSoundResidualButton_i(Fl_Button*, void*) {
  StoreOutputSoundResidual();
}
void UserInterface::cb_mStoreOutputSoundResidualButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mStoreOutputSoundResidualButton_i(o,v);
}

inline void UserInterface::cb_mDisplayOutputSoundResidualButton_i(Fl_Button*, void*) {
  DisplayOutputSoundResidual();
}
void UserInterface::cb_mDisplayOutputSoundResidualButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mDisplayOutputSoundResidualButton_i(o,v);
}

inline void UserInterface::cb_mExitButton_i(Fl_Button*, void*) {
  Exit();
}
void UserInterface::cb_mExitButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_mExitButton_i(o,v);
}

UserInterface::UserInterface() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = mWindow = new Fl_Double_Window(660, 489);
    w = o;
    o->user_data((void*)(this));
    { Fl_Box* o = new Fl_Box(340, 20, 255, 25, "SMS Analysis/Synthesis Application");
      o->labelfont(3);
    }
    { Fl_Box* o = new Fl_Box(340, 45, 255, 25, "MTG - UPF (Barcelona, Spain)");
      o->labelfont(2);
    }
    { Fl_Box* o = new Fl_Box(5, 20, 320, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(10, 10, 95, 20, "Configuration");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mLoadConfigurationButton = new Fl_Button(15, 30, 65, 25, "Load");
      o->callback((Fl_Callback*)cb_mLoadConfigurationButton);
    }
    mConfigurationText = new Fl_Input(15, 60, 300, 25);
    { Fl_Box* o = new Fl_Box(5, 105, 320, 125);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(10, 95, 60, 20, "Analysis");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Box* o = new Fl_Box(10, 125, 310, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(15, 115, 85, 20, "Input Sound");
      o->box(FL_FLAT_BOX);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mDisplayInputSoundButton = new Fl_Button(250, 135, 65, 25, "Display");
      o->callback((Fl_Callback*)cb_mDisplayInputSoundButton);
      o->deactivate();
    }
    mInputSoundText = new Fl_Input(15, 165, 300, 25);
    { Fl_Button* o = mAnalyzeButton = new Fl_Button(10, 200, 70, 25, "Analyze");
      o->callback((Fl_Callback*)cb_mAnalyzeButton);
    }
    { Fl_Box* o = new Fl_Box(5, 245, 320, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(10, 235, 95, 20, "Analysis Data");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mLoadAnalysisDataButton = new Fl_Button(15, 255, 65, 25, "Load");
      o->box(FL_THIN_UP_BOX);
      o->callback((Fl_Callback*)cb_mLoadAnalysisDataButton);
    }
    { Fl_Button* o = mStoreAnalysisDataButton = new Fl_Button(85, 255, 65, 25, "Store");
      o->callback((Fl_Callback*)cb_mStoreAnalysisDataButton);
      o->deactivate();
    }
    mAnalysisDataText = new Fl_Input(15, 285, 300, 25);
    { Fl_Box* o = new Fl_Box(5, 330, 320, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(10, 320, 100, 20, "Transformation");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mLoadTransformationButton = new Fl_Button(15, 340, 65, 25, "Load");
      o->box(FL_THIN_UP_BOX);
      o->callback((Fl_Callback*)cb_mLoadTransformationButton);
    }
    { Fl_Button* o = mTransformButton = new Fl_Button(85, 340, 65, 25, "Do");
      o->callback((Fl_Callback*)cb_mTransformButton);
      o->deactivate();
    }
    mTransformationFileText = new Fl_Input(15, 370, 300, 25);
    { Fl_Box* o = new Fl_Box(5, 415, 320, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(10, 405, 55, 20, "Melody");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mAnalyzeMelodyButton = new Fl_Button(10, 425, 65, 25, "Analyze");
      o->box(FL_THIN_UP_BOX);
      o->callback((Fl_Callback*)cb_mAnalyzeMelodyButton);
      o->deactivate();
    }
    { Fl_Button* o = mStoreMelodyButton = new Fl_Button(80, 425, 65, 25, "Store");
      o->callback((Fl_Callback*)cb_mStoreMelodyButton);
      o->deactivate();
    }
    mMelodyFileText = new Fl_Input(10, 455, 300, 25);
    { Fl_Box* o = new Fl_Box(335, 105, 320, 320);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(340, 95, 70, 20, "Synthesis");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mSynthesizeButton = new Fl_Button(340, 120, 85, 25, "Synthesize");
      o->callback((Fl_Callback*)cb_mSynthesizeButton);
      o->deactivate();
    }
    { Fl_Box* o = new Fl_Box(340, 160, 310, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(345, 150, 95, 20, "Output Sound");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mStoreOutputSoundButton = new Fl_Button(345, 170, 65, 25, "Store");
      o->callback((Fl_Callback*)cb_mStoreOutputSoundButton);
      o->deactivate();
    }
    { Fl_Button* o = mDisplayOutputSoundButton = new Fl_Button(585, 170, 60, 25, "Display");
      o->callback((Fl_Callback*)cb_mDisplayOutputSoundButton);
      o->deactivate();
    }
    mOutputSoundText = new Fl_Input(345, 200, 300, 25);
    { Fl_Box* o = new Fl_Box(340, 240, 310, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(345, 230, 170, 20, "Output Sound: Sinusoidal");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mStoreOutputSoundSinusoidalButton = new Fl_Button(345, 250, 65, 25, "Store");
      o->callback((Fl_Callback*)cb_mStoreOutputSoundSinusoidalButton);
      o->deactivate();
    }
    { Fl_Button* o = mDisplayOutputSoundSinusoidalButton = new Fl_Button(585, 250, 60, 25, "Display");
      o->callback((Fl_Callback*)cb_mDisplayOutputSoundSinusoidalButton);
      o->deactivate();
    }
    mOutputSoundSinusoidalText = new Fl_Input(345, 280, 300, 25);
    { Fl_Box* o = new Fl_Box(340, 325, 310, 70);
      o->box(FL_ENGRAVED_FRAME);
    }
    { Fl_Box* o = new Fl_Box(345, 315, 160, 20, "Output Sound: Residual");
      o->box(FL_FLAT_BOX);
      o->labelfont(2);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = mStoreOutputSoundResidualButton = new Fl_Button(345, 335, 65, 25, "Store");
      o->callback((Fl_Callback*)cb_mStoreOutputSoundResidualButton);
      o->deactivate();
    }
    { Fl_Button* o = mDisplayOutputSoundResidualButton = new Fl_Button(585, 335, 60, 25, "Display");
      o->callback((Fl_Callback*)cb_mDisplayOutputSoundResidualButton);
      o->deactivate();
    }
    mOutputSoundResidualText = new Fl_Input(345, 365, 300, 25);
    { Fl_Button* o = mExitButton = new Fl_Button(595, 70, 60, 25, "Exit");
      o->callback((Fl_Callback*)cb_mExitButton);
    }
    o->end();
  }
}
