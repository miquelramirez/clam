/*
 * Copyright (c) 2001-2002 MUSIC TECHNOLOGY GROUP (MTG)
 *                         UNIVERSITAT POMPEU FABRA
 *
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */



/* Define whether you have an std version that is not full compliant
 * to the standard (such as the one included in Visual C++)
 */
#define HAVE_NON_COMPLIANT_STANDARD_LIBRARY

/* Define if your stdc++ library provides the sstream include file
 * Otherwhise, you will have to define the OBSOLETE_SSTREAM macro
 * with the name of an alternative file
 */
#define HAVE_STANDARD_SSTREAM

/* Define if your stdc++ library uses the name "strstream" for 
 * both the name of the include file and the name of the string stream
 * class.
 */
#undef HAVE_STRSTREAM_SSTREAM

/* Define this macro if the str() method in the stringstream class
 * returns a string, as the standard requires.
 * Otherwhise it will be expected to return a char, as in old
 * implementations of the GNU libstdc++
 */
#define HAVE_STANDARD_SSTREAM_STR

/* Thefine this macro if the std::vector class provides an at()
 * method, as required by the standard.
 */
#define HAVE_STANDARD_VECTOR_AT

/* FFTW library header file name */
#define FFTW_HEADER <rfftw.h>

/*
 * This if for disabling some nasty warnings on MSVC about
 * stl names are too long to mangle them properly
 */
#ifdef _MSC_VER
// warning C4355: 'this' : used in base member initializer list
#	pragma warning(disable : 4355) // unwanted warning generated by Visual
// turn off warning about symbols too long for debugger
#	pragma warning (disable : 4786 4503)
// turn off warning about the "C++ Exception Specification ignored"
#       pragma warning (disable : 4290 )

#	include <cstdio>

#	define snprintf _snprintf

// Hint taken from http://www.boost.org/more/microsoft_vcpp.html
// in order to turn MSVC into a more ANSI compliant compiler and
// make i local to the 'for' scope in expressions like
// for (int i=0; i<N; i++)
#	ifndef for
#		define for if (0) {} else for
#	endif


// Needed for getting RtAudio to compile right for Windoze
#define __WINDOWS_DS__

#endif


